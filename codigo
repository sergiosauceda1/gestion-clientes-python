git clone https://github.com/tu-usuario/gestion-clientes-python.git
cd gestion-clientes-python
gestion-clientes-python/
import os
import json

data_folder = "data"
if not os.path.exists(data_folder):
    os.makedirs(data_folder)

class ClienteManager:
    def __init__(self):
        self.clientes = self.cargar_clientes()

    def cargar_clientes(self):
        """Carga la lista de clientes desde los archivos."""
        clientes = {}
        for filename in os.listdir(data_folder):
            if filename.endswith(".json"):
                nombre = filename[:-5]
                clientes[nombre] = os.path.join(data_folder, filename)
        return clientes

    def crear_cliente(self, nombre, info):
        """Crea un nuevo archivo para un cliente."""
        if nombre in self.clientes:
            print(f"El cliente {nombre} ya existe.")
            return
        filepath = os.path.join(data_folder, f"{nombre}.json")
        with open(filepath, "w") as f:
            json.dump(info, f, indent=4)
        self.clientes[nombre] = filepath
        print(f"Cliente {nombre} creado con éxito.")

    def actualizar_cliente(self, nombre, nueva_info):
        """Actualiza la información de un cliente existente."""
        if nombre not in self.clientes:
            print(f"El cliente {nombre} no existe.")
            return
        filepath = self.clientes[nombre]
        with open(filepath, "r+") as f:
            data = json.load(f)
            data.update(nueva_info)
            f.seek(0)
            json.dump(data, f, indent=4)
        print(f"Cliente {nombre} actualizado.")

    def consultar_cliente(self, nombre):
        """Consulta la información de un cliente."""
        if nombre not in self.clientes:
            print(f"El cliente {nombre} no existe.")
            return
        with open(self.clientes[nombre], "r") as f:
            data = json.load(f)
            print(json.dumps(data, indent=4))

    def eliminar_cliente(self, nombre):
        """Elimina un cliente y su archivo."""
        if nombre not in self.clientes:
            print(f"El cliente {nombre} no existe.")
            return
        os.remove(self.clientes[nombre])
        del self.clientes[nombre]
        print(f"Cliente {nombre} eliminado.")

if __name__ == "__main__":
    manager = ClienteManager()
    manager.crear_cliente("Juan Perez", {"servicio": "Internet 50MB", "contacto": "juan@example.com"})
    manager.consultar_cliente("Juan Perez")
